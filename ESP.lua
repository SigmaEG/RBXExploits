--{ Services }--

local UIS = game:GetService("UserInputService");
local Players = game:GetService("Players");

--{ Variables }--

local Player = Players.LocalPlayer;
local toggled = false;
local nameLength = 20;
local characters = {'a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z', "A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z", "1", "2", "3", "4", "5", "6", "7", "8", "9", "0", "!", "@", "#", "$", "%", "^", "&", "*", "(", ")", "-", "+", "[", "]", "{", "}", ";", ":", "'", ",", ".", "<", ">"};
local nameList = {};

--{ Code }--

function genRandomName()
	local randName = "";

	for i = 1, nameLength do		
		randName = randName .. tostring(characters[math.random(1, #characters)]);
	end

	return randName;
end

function instanceESPObject(args)
	if args.uiName ~= nil and args.uiFace ~= nil and args.uiParent ~= nil then
		local UI = Instance.new("SurfaceGui");
		UI.Name = args.uiName;
		UI.Face = args.uiFace;
		UI.AlwaysOnTop = true;
		UI.Parent = args.uiParent;

		local Frame = Instance.new("Frame");
		Frame.Size = UDim2.new(1, 0, 1, 0);
		Frame.BackgroundColor3 = Color3.fromRGB(34, 10, 99);
		Frame.BackgroundTransparency = 0.1;
		Frame.BorderSizePixel = 0;
		Frame.Parent = UI;
	end
end

UIS.InputBegan:Connect(function(input, isTyping)
	if isTyping then return end

	if input.KeyCode == Enum.KeyCode.LeftAlt or input.KeyCode == Enum.KeyCode.RightAlt then
		toggled = not toggled;

		toggle();
	end
end)

function toggle()
	if toggled then
		for _, Enemy in next, Players:GetPlayers() do
			if Enemy.Character or Enemy.Ragdoll then
				if Enemy.Team ~= nil and Player.Team ~= nil then
					if Enemy.TeamColor == Player.TeamColor then
						return;
					end
				end

				local EChar = Enemy.Character or Enemy.Ragdoll
				
				if EChar == nil then
					return;
				end

				if Enemy.Name ~= Player.Name and EChar:FindFirstChild("Humanoid") then
					local HRP = EChar.HumanoidRootPart;
					local Humanoid = EChar.Humanoid;

					for _, Part in next, EChar:GetChildren() do
						--{ ESP }--

						if Part:IsA("BasePart") then
							local frontName = genRandomName();
							table.insert(nameList, frontName);

							instanceESPObject({
								uiName = frontName,
								uiFace = "Front",
								uiParent = Part
							});

							local backName = genRandomName();
							table.insert(nameList, backName);

							instanceESPObject({
								uiName = backName,
								uiFace = "Back",
								uiParent = Part
							});

							local leftName = genRandomName();
							table.insert(nameList, leftName);

							instanceESPObject({
								uiName = leftName,
								uiFace = "Left",
								uiParent = Part
							});

							local rightName = genRandomName();
							table.insert(nameList, rightName);

							instanceESPObject({
								uiName = rightName,
								uiFace = "Right",
								uiParent = Part
							});

							local topName = genRandomName();
							table.insert(nameList, topName);

							instanceESPObject({
								uiName = topName,
								uiFace = "Top",
								uiParent = Part
							});

							local bottomName = genRandomName();
							table.insert(nameList, bottomName);

							instanceESPObject({
								uiName = bottomName,
								uiFace = "Bottom",
								uiParent = Part
							});
						end
					end
				end
			end
		end
	else
		for _, Enemy in next, Players:GetPlayers() do
			if Enemy.Character or Enemy.Ragdoll then
				local EChar = Enemy.Character or Enemy.Ragdoll
				
				if EChar == nil then
					return;
				end

				if EChar:FindFirstChild("Humanoid") then
					for _, ESP in next, EChar:GetDescendants() do
						if table.find(nameList, ESP.Name) then
							ESP:Destroy()
						end
					end
				end
			end
		end

		nameList = {};
	end
end
